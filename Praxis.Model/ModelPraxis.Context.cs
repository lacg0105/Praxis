//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Praxis.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BDPRAXISEntities : DbContext
    {
        public BDPRAXISEntities()
            : base("name=BDPRAXISEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CatUsuario> CatUsuario { get; set; }
        public virtual DbSet<FolioClaveAcceso> FolioClaveAcceso { get; set; }
        public virtual DbSet<CatCorreo> CatCorreo { get; set; }
        public virtual DbSet<Parametro> Parametro { get; set; }
        public virtual DbSet<BitacoraClaveAcceso> BitacoraClaveAcceso { get; set; }
        public virtual DbSet<BitacoraNavegacion> BitacoraNavegacion { get; set; }
        public virtual DbSet<CatArea> CatArea { get; set; }
        public virtual DbSet<CatEstatus_Usuario> CatEstatus_Usuario { get; set; }
        public virtual DbSet<CatRol> CatRol { get; set; }
        public virtual DbSet<CatInstitucion> CatInstitucion { get; set; }
        public virtual DbSet<CatSexo> CatSexo { get; set; }
        public virtual DbSet<CatTipoInformacion> CatTipoInformacion { get; set; }
        public virtual DbSet<CatTipoInstitucion> CatTipoInstitucion { get; set; }
        public virtual DbSet<CatTipoSangre> CatTipoSangre { get; set; }
        public virtual DbSet<HistoriaClinica> HistoriaClinica { get; set; }
        public virtual DbSet<ModuloxRol> ModuloxRol { get; set; }
        public virtual DbSet<ModuloxUsuario> ModuloxUsuario { get; set; }
        public virtual DbSet<CatReligion> CatReligion { get; set; }
        public virtual DbSet<HistoriaClaveAcceso> HistoriaClaveAcceso { get; set; }
        public virtual DbSet<PerfilUsuario> PerfilUsuario { get; set; }
        public virtual DbSet<CatEscolaridad> CatEscolaridad { get; set; }
        public virtual DbSet<CatEstadoCivil> CatEstadoCivil { get; set; }
    
        public virtual ObjectResult<string> sp_ModuloAcceso_Modulos_ConsultaxUsuario(string idUsuario)
        {
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_ModuloAcceso_Modulos_ConsultaxUsuario", idUsuarioParameter);
        }
    }
}
